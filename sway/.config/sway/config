# ~/.config/sway/config
# Read `man 5 sway` for a complete reference.

include config.d/*

# Preferred terminal emulator
set $term alacritty

# Application launcher
# It's recommended that you pass the final command to sway
set $menu j4-dmenu-desktop \
    --dmenu='bemenu --ignorecase \
        --fn "Terminus 10" \
        --tb "$dark1" --tf "$light4" \
        --fb "$dark0" --ff "$light0" \
        --hb "$dark0" --hf "$neutral_yellow" \
        --nb "$dark0" --nf "$light4"' \
    --term='$term' | xargs swaymsg exec

# Screen locker
set $locker swaylock -f -c 000000


### Input configuration

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input * xkb_layout "us,ru"
input * xkb_options "grp:caps_toggle,grp_led:scroll,compose:lwin"
input * xkb_numlock enabled

input type:touchpad {
    tap enabled

    # middle click emulation
    middle_emulation enabled

    # disable-while-typing
    dwt enabled
    
    # natural (inverted) scrolling
    natural_scroll enabled
}


### Output configuration

# You can get the names of your outputs by running: swaymsg -t get_outputs
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0

output * bg ~/Изображения/beat-schuler-175124-unsplash.jpg fill

# Dynamic output configuration daemon
#exec kanshi

set $laptop eDP-1
set $monitor VGA-1

output $monitor position 0,0
output $laptop position 1920,312

# Clamshell mode aka closed display mode
bindswitch --reload lid:on output $laptop disable
bindswitch --reload lid:off output $laptop enable


focus output $monitor


### Idle configuration

exec swayidle -w \
     timeout 300 '$locker' \
     timeout 600 'swaymsg "output * dpms off"' \
          resume 'swaymsg "output * dpms on"' \
    before-sleep '$locker'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.


### Key bindings

# Modifier key. Use Mod1 for Alt, Mod4 for Win
set $mod Mod1

# Home row direction keys
set $left h
set $down j
set $up k
set $right l

# start a terminal
bindsym $mod+Return exec $term

# start application launcher
bindsym --to-code $mod+d exec $menu

# kill focused window
bindsym --to-code $mod+Shift+q kill

# reload the configuration file
bindsym --to-code $mod+Shift+c reload

bindsym --to-code {
    $mod+$left focus left
    $mod+$down focus down
    $mod+$up focus up
    $mod+$right focus right

    $mod+Shift+$left move left
    $mod+Shift+$down move down
    $mod+Shift+$up move up
    $mod+Shift+$right move right
}

# conflicts with JetBrains IDEs
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

#bindsym --to-code $mod+Shift+m move workspace to output right
bindsym --to-code $mod+Shift+F11 move workspace to output $monitor
bindsym --to-code $mod+Shift+F12 move workspace to output $laptop

bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# Switch to the previously focused workspace
bindsym --to-code $mod+grave workspace back_and_forth

bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

bindsym --to-code $mod+g split horizontal
bindsym --to-code $mod+v split vertical

# Switch the current container between different layout styles
bindsym --to-code $mod+s layout stacking
bindsym --to-code $mod+w layout tabbed
bindsym --to-code $mod+e layout toggle split

# Make the current focus fullscreen
bindsym --to-code $mod+Shift+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym --to-code $mod+a focus parent

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus mark "scratchpad", move to scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus [con_mark="scratchpad"] scratchpad show

for_window [app_id="telegramdesktop" title="Telegram"] move to scratchpad
for_window [app_id="telegramdesktop" title="Telegram"] resize set 900 800

bindsym $mod+F3 [app_id="telegramdesktop"] scratchpad show

bindsym $mod+F5 exec caja
bindsym $mod+F6 exec firefox

# hide mako notifications
bindsym --to-code $mod+x exec makoctl dismiss
bindsym --to-code $mod+Shift+x exec makoctl dismiss --all

# make screenshot
bindsym --release Print exec grim -g \"$(slurp)" - | wl-copy

# increase sound volume
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%

# decrease sound volume
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%

# mute sound
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

# run calculator
bindsym XF86Calculator exec gnome-calculator

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code {
        $left resize shrink width 10px
        $down resize grow height 10px
        $up resize shrink height 10px
        $right resize grow width 10px
    }

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym --to-code $mod+r mode "default"
}

bindsym --to-code $mod+r mode "resize"

mode "exit" {
    bindsym --to-code p exec systemctl poweroff; mode "default"
    bindsym --to-code r exec systemctl reboot; mode "default"
    bindsym --to-code s exec systemctl suspend; mode "default"
    bindsym --to-code l exec '$locker'; mode "default"
    bindsym --to-code x exec swaymsg exit

    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym --to-code $mod+Shift+e mode "default"
}

bindsym --to-code $mod+Shift+e mode "exit"

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing
# and right mouse button for dragging.
floating_modifier $mod normal


font pango:Terminus 8
#font monospace 8
#focus_follows_mouse no
smart_borders no_gaps


### Client colors

# property               border         bg           text     indicator     child border
#client.focused           $neutral_blue  $faded_blue  $light0  $bright_blue  $faded_blue
#client.focused_inactive  $dark4         $dark3       $light2  $gray         $dark3
#client.unfocused         $dark2         $dark1       $light4  $gray         $dark1
#client.urgent            $neutral_red   $faded_red   $light0  $bright_red   $faded_red

# Basic color configuration using the Base16 variables for windows and borders.
# Property Name         Border  BG      Text    Indicator Child Border
#client.focused          $base05 $base0D $base00 $base0D $base0D
#client.focused_inactive $base01 $base01 $base05 $base03 $base01
#client.unfocused        $base01 $base00 $base05 $base01 $base01
#client.urgent           $base08 $base08 $base00 $base08 $base08
#client.placeholder      $base00 $base00 $base05 $base00 $base00
#client.background       $base07

### Status bar

# Read `man 5 sway-bar` for more information about this section.

bar {
    #status_command i3status-rs ~/.config/i3status-rust/config.toml
    status_command i3status -c ~/.config/i3status/i3status.conf
    position top
    separator_symbol "  "
    status_padding 0
    status_edge_padding 0
    tray_output none
    colors {
        background $dark0

        # state             border           bg             text
        #focused_workspace   $neutral_blue    $faded_blue    $light0
        #active_workspace    $dark4           $dark3         $light2
        #inactive_workspace  $dark2           $dark1         $light4
        #urgent_workspace    $neutral_red     $faded_red     $light0
        #binding_mode        $faded_red       $faded_red     $light0
    }
    #colors {
    #    background $base00
    #    separator  $base01
    #    statusline $base04

    #    # State             Border  BG      Text
    #    focused_workspace   $base05 $base0D $base00
    #    active_workspace    $base05 $base03 $base00
    #    inactive_workspace  $base03 $base01 $base05
    #    urgent_workspace    $base08 $base08 $base00
    #    binding_mode        $base00 $base0A $base00
    #}

}


assign [app_id="firefox"] 2
assign [class="firefox"] 2
assign [class="PyCharm"] 3
assign [class="java-lang-Thread"] 3
assign [class="jetbrains-pycharm"] 3
assign [app_id="transmission-gtk"] 9
assign [class="Thunderbird"] 10

# Notification daemon
exec mako

#exec msm_notifier
exec telegram-desktop
exec thunderbird
#exec transmission-gtk

#exec -no-startup-id /usr/lib/mate-polkit/polkit-mate-authentication-agent-1
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
#exec /usr/bin/gnome-keyring-daemon --start --components=ssh,secrets,pkcs11

